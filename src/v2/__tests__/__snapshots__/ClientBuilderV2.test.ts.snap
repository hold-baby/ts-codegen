// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PathResolver should get correct action creator by resolved paths 1`] = `
"export const deleteAttachmentUsingDELETE = createRequestAction<{
  id: string;
}>(\\"deleteAttachmentUsingDELETE\\", ({ id }) => ({
  url: \`/api/test/\${id}\`,
  method: \\"delete\\",
  headers: { \\"Content-Type\\": \\"application/json\\" },
}));

export const downloadUsingGET = createRequestAction<
  {
    id: string;
  },
  IResource
>(\\"downloadUsingGET\\", ({ id }) => ({
  url: \`/api/test/\${id}\`,
  method: \\"get\\",
  headers: { \\"Content-Type\\": \\"application/json\\" },
}));

export const findBookByIdUsingGET = createRequestAction<
  {
    id: string;
  },
  IBookDetailVo
>(\\"findBookByIdUsingGET\\", ({ id }) => ({
  url: \`/api/test/book/\${id}\`,
  method: \\"get\\",
  headers: { \\"Content-Type\\": \\"application/json\\" },
}));

export const getDocumentByIdUsingGET = createRequestAction<
  {
    documentId: string;
    from?: keyof typeof FromFrom;
  },
  IDocumentVo
>(\\"getDocumentByIdUsingGET\\", ({ documentId, from }) => ({
  url: \`/api/test/documents/\${documentId}/doc\`,
  method: \\"get\\",
  params: {
    from,
  },
  headers: { \\"Content-Type\\": \\"application/json\\" },
}));

export const getScheduleDetailsByDateUsingGET = createRequestAction<
  {
    roleId?: string;
    scheduleDate: number;
  },
  IScheduleVo[]
>(\\"getScheduleDetailsByDateUsingGET\\", ({ scheduleDate, roleId }) => ({
  url: \`/api/test/schedules\`,
  method: \\"get\\",
  params: {
    scheduleDate,
    roleId,
  },
  headers: { \\"Content-Type\\": \\"application/json\\" },
}));

export const updateBookByIdUsingPUT = createRequestAction<{
  id: string;
  updateBookRequest: IUpdateBookRequest;
}>(\\"updateBookByIdUsingPUT\\", ({ id, updateBookRequest }) => ({
  url: \`/api/test/book/\${id}\`,
  method: \\"put\\",
  data: updateBookRequest,
  headers: { \\"Content-Type\\": \\"application/json\\" },
}));

export const uploadAttachmentUsingPOST = createRequestAction<
  {
    attachment: File;
  },
  IAttachmentBo
>(\\"uploadAttachmentUsingPOST\\", ({ attachment }) => ({
  url: \`/api/test\`,
  method: \\"post\\",
  data: attachment,
  headers: { \\"Content-Type\\": \\"multipart/form-data\\" },
}));
export enum FromFrom {
  \\"AAA\\" = \\"AAA\\",
  \\"BBB\\" = \\"BBB\\",
}
"
`;
