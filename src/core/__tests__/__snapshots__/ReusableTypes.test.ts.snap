// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReusableTypes should handle swagger v3 component schemas 1`] = `
"export interface Category {
  id?: number;
  name?: string;
}

export interface Error {
  code: number;
  message: string;
}

export interface NewPet {
  name: string;
  tag?: string;
}

export interface Pet extends NewPet {
  categories?: Category[];
  id: number;
}

export type Pets = Pet[];
"
`;

exports[`ReusableTypes should handle swagger v3 component schemas with prefix on interface or type 1`] = `
"export interface ICategory {
  id?: number;
  name?: string;
}

export interface IError {
  code: number;
  message: string;
}

export interface INewPet {
  name: string;
  tag?: string;
}

export interface IPet extends INewPet {
  categories?: ICategory[];
  id: number;
}

export type TPets = IPet[];
"
`;

exports[`ReusableTypes should scan swagger v2 definitions and transform it to correct types 1`] = `
"export interface AttachmentBo {
  authorName?: string;
  createdDate?: number;
  fileName?: string;
  id?: string;
  mimeType?: string;
  path?: string;
}

export interface BookDetailVo {
  attachment?: ScheduleVo;
  authorName?: string;
  createdDate?: number;
  fileName?: string;
  id?: string;
  mimeType?: string;
  path?: string;
}

export interface BookVo {
  address?: string;
  price?: string;
}

export interface BookingResponse {
  data: DocumentVo;
  errors?: ErrorInfo[];
}

export interface DocumentVo {
  attachment?: BookDetailVo;
  authorName?: string;
  createdDate?: number;
  id?: string;
  note?: string;
  title?: string;
}

export interface ErrorInfo {
  errorMessage?: string;
}

export interface File {
  absolute?: boolean;
  absoluteFile?: File;
  absolutePath?: string;
  canonicalFile?: File;
  canonicalPath?: string;
  directory?: boolean;
  executable?: boolean;
  file?: boolean;
  freeSpace?: number;
  hidden?: boolean;
  lastModified?: number;
  name?: string;
  parent?: string;
  parentFile?: File;
  path?: string;
  readable?: boolean;
  totalSpace?: number;
  usableSpace?: number;
  writable?: boolean;
}

export interface InputStream {
  [key: string]: any;
}

export interface Resource {
  description?: string;
  file?: File;
  filename?: string;
  inputStream?: InputStream;
  open?: boolean;
  readable?: boolean;
  uri?: Uri;
  url?: Url;
}

export interface ScheduleVo {
  schedules?: BookVo[][];
  shiftId?: string;
  team?: string;
}

export interface Uri {
  absolute?: boolean;
  authority?: string;
  fragment?: string;
  host?: string;
  opaque?: boolean;
  path?: string;
  port?: number;
  query?: string;
  rawAuthority?: string;
  rawFragment?: string;
  rawPath?: string;
  rawQuery?: string;
  rawSchemeSpecificPart?: string;
  rawUserInfo?: string;
  scheme?: string;
  schemeSpecificPart?: string;
  userInfo?: string;
}

export interface Url {
  authority?: string;
  content?: object;
  defaultPort?: number;
  deserializedFields?: UrlStreamHandler;
  file?: string;
  host?: string;
  path?: string;
  port?: number;
  protocol?: string;
  query?: string;
  ref?: string;
  serializedHashCode?: number;
  userInfo?: string;
}

export interface UrlStreamHandler {
  [key: string]: any;
}

export interface UpdateBookRequest {
  birthCountry?: string;
  citizenship?: string;
  dateOfBirth?: number;
  employmentStatus?: string;
  ethnicity?: string;
  gender?: string;
  idNumber?: string;
  idType?: string;
  roleId?: string;
  spokenLanguage?: string[];
}
"
`;
